name: Test, Lint, and Deploy

on:
  push:
  pull_request:
  release:
    types: [created]

permissions:
  contents: read
jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10", "3.11", "3.12", "3.13"]
    steps:
      - uses: actions/checkout@v4
      - uses: extractions/setup-just@v2
        env:
          # this is not required but add it if you get any rate limiting issues
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Install the latest version of uv and set the python version
        uses: astral-sh/setup-uv@v5
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          just init
      - name: Run tests
        run: |
          just test-unit
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: extractions/setup-just@v2
        env:
          # this is not required but add it if you get any rate limiting issues
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Install the latest version of uv and set the python version
        uses: astral-sh/setup-uv@v5
        with:
          python-version: "3.12"
      - uses: extractions/setup-just@v2
        env:
          # this is not required but add it if you get any rate limiting issues
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Install dependencies
        run: |
          just init
      - name: Run linter
        run: |
          just lint

  publish:
    runs-on: ubuntu-latest
    needs: [test, lint]
    environment: release
    permissions:
      id-token: write
    if: github.event_name == 'release'
    steps:
    - uses: actions/checkout@v4
    - name: Install the latest version of uv and set the python version
      uses: astral-sh/setup-uv@v5
      with:
        python-version: "3.12"
    - name: Install dependencies
      run: |
        uv pip install setuptools wheel build
    - name: Build
      run: |
        uv run -m build
    - name: Publish
      uses: pypa/gh-action-pypi-publish@release/v1
